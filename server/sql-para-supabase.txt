-- COPIE E COLE ESTE CÓDIGO NO EDITOR SQL DO SUPABASE
-- Vá para https://app.supabase.com e acesse seu projeto
-- Clique em "SQL Editor" no menu lateral
-- Cole este código e execute

-- Função para criar tabela de usuários
CREATE OR REPLACE FUNCTION criar_tabela_users() 
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER 
AS $$
BEGIN
  -- Criar tabela de usuários
  CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(50) NOT NULL CHECK (role IN ('broker', 'manager', 'director')),
    avatar_initials VARCHAR(10),
    team_id INTEGER,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
  );
  
  -- Criar índices
  CREATE INDEX IF NOT EXISTS idx_users_username ON users(username);
  CREATE INDEX IF NOT EXISTS idx_users_role ON users(role);
END;
$$;

-- Função para criar tabelas de gamificação
CREATE OR REPLACE FUNCTION criar_tabela_gamification() 
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER 
AS $$
BEGIN
  -- Criar tabela de perfis de gamificação
  CREATE TABLE IF NOT EXISTS gamification_profiles (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL UNIQUE,
    level VARCHAR(50) NOT NULL DEFAULT 'Iniciante',
    total_points INTEGER DEFAULT 0,
    weekly_points INTEGER DEFAULT 0,
    streak INTEGER DEFAULT 0,
    ranking_position INTEGER,
    last_active TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
  );
  
  -- Criar tabela de conquistas disponíveis
  CREATE TABLE IF NOT EXISTS achievements (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    category VARCHAR(100) NOT NULL,
    points INTEGER NOT NULL DEFAULT 0,
    icon VARCHAR(100),
    trigger_type VARCHAR(100) NOT NULL,
    trigger_condition VARCHAR(100) NOT NULL,
    target_progress INTEGER NOT NULL DEFAULT 1,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
  );
  
  -- Criar tabela de progresso de conquistas dos usuários
  CREATE TABLE IF NOT EXISTS user_achievements (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL,
    achievement_id INTEGER NOT NULL,
    progress INTEGER DEFAULT 0,
    completed BOOLEAN DEFAULT FALSE,
    completed_at TIMESTAMPTZ,
    UNIQUE(user_id, achievement_id)
  );
  
  -- Criar tabela de histórico de pontos
  CREATE TABLE IF NOT EXISTS points_history (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL,
    points INTEGER NOT NULL,
    reason TEXT NOT NULL,
    source_type VARCHAR(100),
    source_id INTEGER,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
  );
  
  -- Criar tabela de configurações do sistema de gamificação
  CREATE TABLE IF NOT EXISTS gamification_settings (
    id SERIAL PRIMARY KEY,
    points_per_activity INTEGER DEFAULT 10,
    points_per_deal INTEGER DEFAULT 50,
    weekly_decay_percentage INTEGER DEFAULT 30,
    level_thresholds JSONB NOT NULL DEFAULT '{"Iniciante": 0, "Bronze": 100, "Prata": 500, "Ouro": 1000, "Platina": 2000, "Diamante": 5000, "Mestre": 10000}',
    updated_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
  );
  
  -- Criar índices
  CREATE INDEX IF NOT EXISTS idx_gamification_profiles_user_id ON gamification_profiles(user_id);
  CREATE INDEX IF NOT EXISTS idx_user_achievements_user_id ON user_achievements(user_id);
  CREATE INDEX IF NOT EXISTS idx_points_history_user_id ON points_history(user_id);
END;
$$; 